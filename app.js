var sys = require('./sysinfo')
var Discord = require('discord.io');
var logger = require('winston');
// const { get } = require('snekfetch');
var goose = require('./commands/gooseMeme');

logger.remove(logger.transports.Console);
logger.add(new logger.transports.Console, {
    colorize: true
});

logger.level = 'debug';
var bot = new Discord.Client({
    token: process.env.TOKEN,
    autorun: true
});
bot.on('ready', function (evt) {
    logger.info('Connected');
    logger.info('Logged in as: ');
    logger.info(bot.username + ' - (' + bot.id + ')');
    // bot.sendMessage({
    //     to: "581451144077770754",
    //     message: "üì£ –ì—É—Å—å –ê–Ω—Ç–æ–Ω –Ω–∞ –º–µ—Å—Ç–µ! –ü–ª—è—à–µ–º –≤–º–µ—Å—Ç–µ!",
    // });
    bot.setPresence({ game: { name: "!ga help", type: 3 } });
});

bot.on("guildMemberAdd", member => {
    bot.sendMessage({
        to: "581184926766858242",
        message: "<@!" + member.id + ">, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ –≥—É—Å–∏–Ω–æ–π –∏–º–ø–µ—Ä–∏–∏! –í–µ–¥–∏ —Å–µ–±—è —Ö–æ—Ä–æ—à–æ, –∏–Ω–∞—á–µ —è —Ç–µ–±—è –ø–æ—â–∏–ø–∞—é!",
    });
    bot.sendMessage({
        to: member.id,
        message: "–ü—Ä–∏–≤–µ—Ç, —è –ì—É—Å—å –ê–Ω—Ç–æ–Ω. –¢–∞–∫–∂–µ, –º–µ–Ω—è –µ—â–µ –Ω–∞–∑—ã–≤–∞—é—Ç –≥—É—Å—ë–º-–ø–∞—Ü–∏—Ñ–∏—Å—Ç–æ–º, –Ω–æ —Ç—ã –Ω–∞–∑—ã–≤–∞–π –º–µ–Ω—è –ø—Ä–æ—Å—Ç–æ - –ê–Ω—Ç–æ—à–∫–∞ <:heart:> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—É—Å–∏–Ω—É—é –∏–º–ø–µ—Ä–∏—é, –Ω–∞–¥–µ—é—Å—å —Ç—ã —Å–æ—Å–ª—É–∂–∏—à—å –¥–æ–±—Ä—É—é —Å–ª—É–∂–±—É. <:exclamation:> –ò –∑–∞–ø–æ–º–Ω–∏ –Ω–∞—à—É –ø—Ä–æ—Å—Ç—É—é –∏—Å—Ç–∏–Ω—É: ***–ë—É–¥—å –ì—É—Å—ë–º, –ì—É—Å—å –∑–∞ –ì—É—Å—è, –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –ì—É—Å–µ–π***. –£–¥–∞—á–∏! –ì–ê!",
    });
});
bot.on("guildRoleUpdate", function (oldRole, newRole) {
    bot.sendMessage({
        to: "581184926766858242",
        message: "<@!" + member.id + ">, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ –≥—É—Å–∏–Ω–æ–π –∏–º–ø–µ—Ä–∏–∏! –í–µ–¥–∏ —Å–µ–±—è —Ö–æ—Ä–æ—à–æ, –∏–Ω–∞—á–µ —è —Ç–µ–±—è –ø–æ—â–∏–ø–∞—é!",
    });
    bot.sendMessage({
        to: member.id,
        message: "–ü—Ä–∏–≤–µ—Ç, —è –ì—É—Å—å –ê–Ω—Ç–æ–Ω. –¢–∞–∫–∂–µ, –º–µ–Ω—è –µ—â–µ –Ω–∞–∑—ã–≤–∞—é—Ç –≥—É—Å—ë–º-–ø–∞—Ü–∏—Ñ–∏—Å—Ç–æ–º, –Ω–æ —Ç—ã –Ω–∞–∑—ã–≤–∞–π –º–µ–Ω—è –ø—Ä–æ—Å—Ç–æ - –ê–Ω—Ç–æ—à–∫–∞ <:heart:> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥—É—Å–∏–Ω—É—é –∏–º–ø–µ—Ä–∏—é, –Ω–∞–¥–µ—é—Å—å —Ç—ã —Å–æ—Å–ª—É–∂–∏—à—å –¥–æ–±—Ä—É—é —Å–ª—É–∂–±—É. <:exclamation:> –ò –∑–∞–ø–æ–º–Ω–∏ –Ω–∞—à—É –ø—Ä–æ—Å—Ç—É—é –∏—Å—Ç–∏–Ω—É: ***–ë—É–¥—å –ì—É—Å—ë–º, –ì—É—Å—å –∑–∞ –ì—É—Å—è, –Ω–∏—á–µ–≥–æ –∫—Ä–æ–º–µ –ì—É—Å–µ–π***. –£–¥–∞—á–∏! –ì–ê!",
    });
});
bot.on('message', function (user, userID, channelID, message, evt) {
    if (message.substring(0, 3) == '!ga' || message.substring(0, 3) == '-ga') {
        var args = message.substring(1).split(' ');
        var cmd = args[1];

        args = args.splice(1);
        switch (cmd) {
            case 'help':
                logger.info(user + ' used ga help');
                bot.sendMessage({
                    to: channelID,
                    message: "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥: `!ga hi`, `!ga time`, `!ga drop`",
                });
                break;
            case 'sys':
                logger.info(user + ' used ga sys');
                var info = getInfo();
                bot.sendMessage({
                    to: channelID,
                    message: `${info}`,
                });
                break;
            case 'time':
                logger.info(user + ' used ga time');

                var diff = getServerTimeDiff();

                bot.sendMessage({
                    to: channelID,
                    message: "–° –º–æ–º–µ–Ω—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ—à–ª–æ:  " + diff + " –¥–Ω–µ–π",
                });
                break;
            case 'hi':
                logger.info(user + ' used ga hi');
                bot.sendMessage({
                    to: channelID,
                    message: "<@!" + userID + ">, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å, –º–æ–π –≥–∞–≥–∞–≥–∞—à–µ—á–∫–∞ <:anton:581452820394278917> <:anton:581452820394278917> <:anton:581452820394278917>",
                });
                break;
            case 'role':
                bot.sendMessage({
                    to: userID,
                    message: "–¢–≤–æ–∏ —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: " + bot.servers["581184926766858240"].members[userID].roles.id,
                });
                break;
            case 'drop':
                goose.run(bot, user, channelID);
                break;
            case 'boom':
                logger.info(user + ' used ga boom');
                timeId = setInterval(function () {
                    bot.sendMessage({
                        to: channelID,
                        message: `This is ·Äë, gg`,
                    });
                }, 1000);
                setTimeout(function () {
                    clearInterval(timeId);
                }, 5000);
                break;
        }
    }
    if (bot.directMessages[channelID]) {
        if (message === '!s') {
            sys.getInfo();
        }
        // if (message === '!ga drop') {
        //     goose.run(bot, user, userID);
        // }

        if (message.substring(0, 2) == '!r') {
            var args = message.substring(0).split('!r ');
            var msg = args[1];

            args = args.splice(0, 1);
            if (cmd != undefined || msg.length !== 0) {
                try {
                    bot.sendMessage({
                        to: "581451144077770754",
                        message: `${msg}`,
                    });
                    logger.info(user + ` used !r with msg: ${msg}`);
                    bot.sendMessage({
                        to: userID,
                        message: '',
                        embed: {
                            color: 0x57CC00,
                            title: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',
                            description: `> ${msg}`
                        }
                    });
                    logger.info(`bot sended callback message to ${user}`)
                }
                catch (error) {
                    bot.sendMessage({
                        to: userID,
                        message: '',
                        embed: {
                            color: 0xCC0016,
                            title: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',
                            description: `> ${msg} \n ${error}`
                        }
                    });
                    logger.info(`error on sending message with !r \n ${error}`)
                }
            }
        }
    }
});

function getServerTimeDiff() {
    var today = new Date();
    var serverCreated = new Date(2019, 4, 23, 15, 25);
    var diff = today - serverCreated;
    diff = Math.ceil(diff / (1000 * 3600 * 24));
    return diff;
}
require('http').createServer().listen(3000)